<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace : 이름공간(group), 다른 mapper와 id가 중복시 구분하기 위함 -->
<mapper namespace="com.shinhan.emp">
	<!-- 여러부서들의 직업 정보 조회 where department_id in (10,20,30) -->
	<select id="selectByArray" parameterType="java.util.List"
		resultType="empVO">
		select * from employees
		where department_id in
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
		order by 1
	</select>

	<select id="selectAll" resultType="empVO">
		select * from employees order by 1
	</select>
	<select id="selectJoin2" resultType="map" parameterType="string">
		SELECT employee_id, first_name, salary, department_name, city,
		country_name
		FROM employees
		JOIN departments USING (department_id)
		JOIN
		locations USING (location_id)
		JOIN countries USING (country_id)
		WHERE
		job_id = #{jobId}
	</select>
	<select id="selectAllJob" resultType="jobVO">
		select * from jobs
	</select>

	<select id="selectJoin" parameterType="string"
		resultType="com.shinhan.myapp.emp.EmpJoinDTO">
		SELECT employee_id, first_name, salary, department_name,
		city, country_name
		FROM employees
		JOIN departments USING (department_id)
		JOIN locations USING (location_id)
		JOIN countries USING (country_id)
		WHERE job_id = #{jobId}
	</select>

	<select id="selectByDept" parameterType="int" resultType="empVO">
		select
		* from employees
		where (#{deptid} = -1 OR department_id = #{deptid})
	</select>

	<select id="selectByJob" parameterType="String"
		resultType="empVO">
		select * from employees where job_id = #{aa}
	</select>



	<select id="selectBySalary" parameterType="double"
		resultType="empVO">

		select * from employees where salary >= #{sal}
	</select>

	<!-- use map with param map.put("deptid",값) ==>mybatis map.get(deptid) map.put("jobid",값) 
		map.put("salary",값) map.put("hdate",값) -->
	<select id="selectByCondition" resultType="empVO"
		parameterType="map">
		SELECT *
		FROM employees
		WHERE (#{deptid} = -1 OR
		department_id = #{deptid})
		AND (#{jobid} = '-1' OR job_id = #{jobid})
		AND salary >= #{salary}
		AND hire_date >= #{hdate}
	</select>
	<select id="selectById" parameterType="int" resultType="empVO">
		select *
		from employees
		where employee_id =#{aa}
	</select>
	<insert id="insert" parameterType="empVO">
		insert into
		employees(first_name,last_name,email,phone_number,hire_date,
		job_id,salary,commission_pct,manager_id,employee_id,department_id)
		values ( #{first_name}, #{last_name}, #{email}, #{phone_number},
		#{hire_date},
		#{job_id}, #{salary},
		
		 #{commission_pct}, #{manager_id},
		#{employee_id},
		<if test="department_id == -1">
			null <!-- 부서가 없음 -->
		</if>
		<if test="department_id != -1">
			#{department_id}
		</if>
		)
	</insert>
	<update id="update" parameterType="empVO">
		update employees set
		FIRST_NAME=#{first_name},
		LAST_NAME=#{last_name},
		EMAIL=#{email},
		PHONE_NUMBER=#{phone_number},
		HIRE_DATE=#{hire_date},
		JOB_ID=#{job_id},
		SALARY=#{salary},
		COMMISSION_PCT=#{commission_pct},
		MANAGER_ID=#{manager_id},
		DEPARTMENT_ID=#{department_id}
		where
		EMPLOYEE_ID=#{employee_id}";
	</update>
	<delete id="delete" parameterType="int">
		delete from employees where
		EMPLOYEE_ID = #{aa}
	</delete>
</mapper>